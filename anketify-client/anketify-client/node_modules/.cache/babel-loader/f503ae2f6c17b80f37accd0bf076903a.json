{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Repos\\\\Anketify\\\\anketify-client\\\\anketify-client\\\\src\\\\components\\\\form\\\\read\\\\FormListCreator.tsx\",\n    _s = $RefreshSig$();\n\nimport { Card, Grid, List, ListItem, ListItemText, makeStyles } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport FormViewCreator from \"./FormViewCreator\";\nimport profileService from \"../../../services/ProfileService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formEntry: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 0\n  }\n}));\n\nconst FormList = ({\n  forms\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [selectedForm, setSelectedForm] = useState();\n  const [currentAnswers, setCurrentAnswers] = useState();\n\n  const handleSelectForm = index => {\n    console.log(\"SELECTED FORM: \" + JSON.stringify(forms[index]));\n    setSelectedForm(forms[index]);\n  };\n\n  const handleViewAnswers = index => {\n    const form = forms[index];\n    profileService.getFormResults(form.id).then(answers => {\n      console.log(\"Current asnwers: \" + JSON.stringify(answers));\n      setCurrentAnswers(answers);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 5,\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      className: classes.formEntry,\n      children: forms.map((form, index) => /*#__PURE__*/_jsxDEV(Card, {\n        raised: true,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: `formEntry_${form.name}`,\n              primary: form.name,\n              onClick: () => {\n                handleSelectForm(index);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              id: \"answersEntry\",\n              primary: `See answers for ${form.name}`,\n              onClick: () => {\n                handleViewAnswers(index);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, index.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), selectedForm !== undefined && /*#__PURE__*/_jsxDEV(FormViewCreator, {\n      form: selectedForm,\n      userAnswers: currentAnswers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormList, \"VV2p+QxhbhXIvduQ7JrjYmulQ5Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormList;\nexport default FormList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormList\");","map":{"version":3,"sources":["C:/Users/PC/Repos/Anketify/anketify-client/anketify-client/src/components/form/read/FormListCreator.tsx"],"names":["Card","Grid","List","ListItem","ListItemText","makeStyles","useState","FormViewCreator","profileService","useStyles","theme","formEntry","display","flexDirection","padding","FormList","forms","classes","selectedForm","setSelectedForm","currentAnswers","setCurrentAnswers","handleSelectForm","index","console","log","JSON","stringify","handleViewAnswers","form","getFormResults","id","then","answers","map","name","toString","undefined"],"mappings":"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","sourcesContent":["import { Form, FormUserAnswers } from \"../../../models/Form\";\r\nimport {\r\n  Card,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\nimport FormViewCreator from \"./FormViewCreator\";\r\nimport profileService from \"../../../services/ProfileService\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formEntry: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    padding: 0,\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  forms: Form[];\r\n}\r\n\r\nconst FormList = ({ forms }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const [selectedForm, setSelectedForm] = useState<Form>();\r\n\r\n  const [currentAnswers, setCurrentAnswers] = useState<FormUserAnswers>();\r\n\r\n  const handleSelectForm = (index: number) => {\r\n    console.log(\"SELECTED FORM: \" + JSON.stringify(forms[index]));\r\n    setSelectedForm(forms[index]);\r\n  };\r\n\r\n  const handleViewAnswers = (index: number) => {\r\n    const form = forms[index];\r\n    profileService.getFormResults(form.id).then((answers) => {\r\n      console.log(\"Current asnwers: \" + JSON.stringify(answers));\r\n      setCurrentAnswers(answers);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" spacing={5} alignItems=\"center\">\r\n      <List className={classes.formEntry}>\r\n        {forms.map((form, index) => (\r\n          <Card raised>\r\n            <>\r\n              <ListItem key={index.toString()}>\r\n                <ListItemText\r\n                  id={`formEntry_${form.name}`}\r\n                  primary={form.name}\r\n                  onClick={() => {\r\n                    handleSelectForm(index);\r\n                  }}\r\n                />\r\n              </ListItem>\r\n              <ListItem key={index.toString()}>\r\n                <ListItemText\r\n                  id=\"answersEntry\"\r\n                  primary={`See answers for ${form.name}`}\r\n                  onClick={() => {\r\n                    handleViewAnswers(index);\r\n                  }}\r\n                />\r\n              </ListItem>\r\n            </>\r\n          </Card>\r\n        ))}\r\n      </List>\r\n      {selectedForm !== undefined && (\r\n        <FormViewCreator form={selectedForm} userAnswers={currentAnswers} />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FormList;\r\n"]},"metadata":{},"sourceType":"module"}